WebAudioPlayer = function() {
    function t() {
        var e = this;
        this.autoPlay = false,
        this._onLoad = function() {
            e._audioContext.decodeAudioData(e._xmlHttpRequest.response, e._onDecode)
        }
        ,
        this._onDecode = function(i) {
            e._arrayBuffer = i,
            e._analyser = e._audioContext.createAnalyser(),
            e._analyser.fftSize = t.FFT_SIZE,
            e._spectrumList = new Float32Array(e._analyser.frequencyBinCount),
            e._isReady = true,
            e.autoPlay && e.play(),
            e.onLoaded && e.onLoaded()
        }
        ,
        this._onEnded = function() {
            e.stop(),
            e.onEnded && e.onEnded()
        }
        ,
        window.AudioContext = window.AudioContext || window.webkitAudioContext,
        this._audioContext = new window.AudioContext
        this._isSupported = true

        this._toggle = function(){
            e._audioContext.resume().then(() => {
            console.log('Playback resumed successfully');
          });
        }

        this._toggleoff = function(){
            e._audioContext.suspend().then(() => {
            console.log('Playback paused successfully');
          });
        }
        document.querySelector('button').addEventListener('click', this._toggle);
        
    }
    return Object.defineProperty(t.prototype, "isSupported", {
        get: function() {
            return this._isSupported
        },
        enumerable: true,
        configurable: true
    }),
    Object.defineProperty(t.prototype, "isPlaying", {
        get: function() {
            return this._isPlaying
        },
        enumerable: true,
        configurable: true
    }),
    Object.defineProperty(t.prototype, "isReady", {
        get: function() {
            return this._isReady
        },
        enumerable: true,
        configurable: true
    }),
    t.prototype.load = function(t, e) {
        "undefined" == typeof e && (e = false),
        this.autoPlay = e,
        this._isPlaying && this.stop(),
        this._isReady = false,
        this._xmlHttpRequest && this._xmlHttpRequest.abort(),
        this._xmlHttpRequest = new XMLHttpRequest,
        this._xmlHttpRequest.open("GET", t, true),
        this._xmlHttpRequest.responseType = "arraybuffer",
        this._xmlHttpRequest.onload = this._onLoad,
        this._xmlHttpRequest.send()
    }
    ,
    t.prototype.play = function(t, e, i) {
        "undefined" == typeof t && (t = 0),
        "undefined" == typeof e && (e = 0),
        "undefined" == typeof i && (i = 0),
        this._isReady && (0 > t && (t = 0),
        0 > e && (e = 0),
        0 > i && (i = 0),
        this._audioBufferSourceNode && this._audioBufferSourceNode.stop(),
        this._audioBufferSourceNode = this._audioContext.createBufferSource(),
        this._audioBufferSourceNode.buffer = this._arrayBuffer,
        this._audioBufferSourceNode.connect(this._audioContext.destination),
        this._audioBufferSourceNode.connect(this._analyser),
        this._audioBufferSourceNode.start = this._audioBufferSourceNode.start || this._audioBufferSourceNode.noteOn,
        this._audioBufferSourceNode.stop = this._audioBufferSourceNode.stop || this._audioBufferSourceNode.noteOff,
        this._audioBufferSourceNode.onended = this._onEnded,
        i > 0 ? this._audioBufferSourceNode.start(e, t, i) : this._audioBufferSourceNode.start(e, t),
        this._isPlaying = true)
    }
    ,
    t.prototype.stop = function(t) {
        "undefined" == typeof t && (t = 0),
        this._isReady && (this._audioBufferSourceNode.stop(t),
        this._audioBufferSourceNode = null,
        this._isPlaying = false)
    }
    ,
    t.prototype.analyse = function() {
        this._isReady && this._analyser.getFloatFrequencyData(this._spectrumList)
    }
    ,
    t.prototype.getAnalyseData = function(e) {
        var i;
        return this._isReady ? (0 > e && (e = 0),
        e > t.FFT_OCTAVE - 1 && (e = t.FFT_OCTAVE - 1),
        i = this._spectrumList[2 << e] - t.MIN_DECIBELS,
        i = Math.pow(10, i / 20) / 1e5) : 0
    }
    ,
    t.FFT_SIZE = 2048,
    t.FFT_OCTAVE = 10,
    t.MIN_DECIBELS = -100,
    t
}()

WebAudioManager = function() {
    function t() {
        var e = this;
        if (this.analyseData = 0,
        this.fft = [2,4,6],
        this._onLoad = function() {
            e.onLoaded && e.onLoaded()
        }
        ,
        this._onEnded = function() {
            e.analyseData = 0,
            e.onEnded && e.onEnded()
        }
        ,
        t._instance)
            throw new Error("This class is singleton...");
        t._instance = this,
        this._webAudioPlayer = new WebAudioPlayer,
        this._webAudioPlayer.onLoaded = this._onLoad,
        this._webAudioPlayer.onEnded = this._onEnded
    }
    return Object.defineProperty(t.prototype, "isSupported", {
        get: function() {
            return this._webAudioPlayer.isSupported
        },
        enumerable: true,
        configurable: true
    }),
    Object.defineProperty(t.prototype, "isPlaying", {
        get: function() {
            return this._webAudioPlayer.isPlaying
        },
        enumerable: true,
        configurable: true
    }),
    Object.defineProperty(t.prototype, "isLoaded", {
        get: function() {
            return this._webAudioPlayer.isReady
        },
        enumerable: true,
        configurable: true
    }),
    t.prototype.load = function(t) {
        this._webAudioPlayer.load("songs/Avicii - SOS ft. Aloe Blacc [Lyric Video].mp3", true),
        this.analyseData = 0
    }
    ,
    t.prototype.analyse = function() {
        var t, e, i, o, n, r, a;
        if (!this._webAudioPlayer.isSupported || !this._webAudioPlayer.isReady || !this._webAudioPlayer.isPlaying)
            return 0;
        for (this._webAudioPlayer.analyse(),
        e = $("#fft li"),
        t = 0; 9 > t; t++)
            i = this._webAudioPlayer.getAnalyseData(t),
            o = 1e3 * i + 1,
            e.eq(t).height(o).css("margin-top", 100 - o);
        n = 0 == this.fft[0] ? 0 : this._webAudioPlayer.getAnalyseData(0) * this.fft[0],
        r = 0 == this.fft[1] ? 0 : this._webAudioPlayer.getAnalyseData(1) * this.fft[1],
        a = 0 == this.fft[2] ? 0 : this._webAudioPlayer.getAnalyseData(2) * this.fft[2],
        this.analyseData = n + r + a
    }
    ,
    Object.defineProperty(t, "instance", {
        get: function() {
            return t._instance || (t._instance = new t),
            t._instance
        },
        enumerable: true,
        configurable: true
    }),
    t
}()
Context = wgl.Context
Main = function() {
    function t() {
        var e = this;
        this._rotationX = 0,
        this._rotationY = 0,
        this._offset = 0,
        this._strength = 0,
        this._indexSound = 0,
        this._isPlaying = false,
        this._isDirect = true,
        this._background = new Image();
        this._background.src = "images/test.jpg"
        this._queue = new createjs.LoadQueue,
        this._init = function() {
            $("#wgl").fadeIn(300),
            e._isDirect && $("h1").fadeIn(300),
            e._initWebGL(),
            e._initSound(),
            e._onResize(),
            $(window).resize(e._onResize),
            e._jqueryButton = $("div#navi button"),
            e._jqueryButton.click(e._onClickButton).mouseenter(e._onMouseEnterButton),
            $("h1 a").click(e._onClickTitle).mouseenter(e._onMouseEnterTitle),
            e._change(),
            e._draw()
        }
        ,
        this._draw = function() {
            var i, o;
            window.requestAnimationFrame(e._draw),
            e._isPlaying ? (WebAudioManager.instance.analyse(),
            o = WebAudioManager.instance.analyseData) : o = 0,
            e._strength += (o - e._strength) * (0 == o ? .05 : .5),
            e._context.clearColorBuffer(3355443, 1),
            (e._rotationX += .25) > 360 && (e._rotationX %= 360),
            (e._rotationY += .375) > 360 && (e._rotationX %= 360),
            (e._offset += 200 * o + 5) > 360 && (e._rotationX %= 360),
            i = mat4.create(),
            mat4.translate(i, i, [0, 0, -5, 0]),
            mat4.rotateY(i, i, -e._rotationX * t._DEGREES_TO_RADIANS),
            mat4.rotateX(i, i, -e._rotationY * t._DEGREES_TO_RADIANS),
            e._uniform.setMatrix(e._program.getUniformLocation("matrix"), 4, i),
            e._uniform.setFloat(e._program.getUniformLocation("offset"), e._offset * t._DEGREES_TO_RADIANS),
            e._uniform.setFloat(e._program.getUniformLocation("strength"), e._strength),
            e._context.drawElements(e._context.TRIANGLES, e._indexList.length, e._context.UNSIGNED_SHORT, 0),
            e._context.flush()
        }
        ,
        this._onLoaded = function() {
            $("#navi ul").removeClass("disabled"),
            $("#startup").fadeOut(100),
            e._isPlaying = true
        }
        ,
        this._onEnded = function() {
            e._isPlaying = false
        }
        ,
        this._onResize = function() {
            var t, i, n, r;
            t = $(window).width(),
            i = $(window).height(),
            n = 1 / Math.tan(Math.PI / 8),
            r = n / (t/i),
            e._context.setSize(t, i),
            e._perspectiveMatrix = new Float32Array([r, 0, 0, 0, 0, n, 0, 0, 0, 0, 1e3 / (.1 - 1e3), -1, 0, 0, .1 * 1e3 / (.1 - 1e3), 0]),
            e._uniform.setMatrix(e._program.getUniformLocation("perspectiveMatrix"), 4, e._perspectiveMatrix)
        }
        ,
        this.load = function(e) {
            this._callback = e,
            this._queue.addEventListener("complete", this._onComplete),
            this._queue.loadFile("images/lmao4.jpg")
        }
        ,
        this._onComplete = function() {
            e._callback && e._callback()
        }
        ,
        this.canvas = document.getElementById("wgl"), 
        this._context = this.canvas.getContext('webgl'),   
        this._context.blendFunc(this._context.ONE, this._context.ONE_MINUS_SRC_COLOR),
        console.log("wgl.context.isSupported: " + this._context.isSupported),
        console.log("wgl.context.isSupportedTextureFloat: " + this._context.isSupportedTextureFloat),
        console.log("Web Audio API is supported.: " + WebAudioManager.instance.isSupported),
        this._isDirect = -1 == window.location.href.indexOf("?iframe")
    }
    return t.prototype.init = function() {
        $("h1").hide(),
        $("#wgl").hide(),
        $("#container").show(),
        $("#not_supported").hide()
        this.load(this._init)
    }
    ,
    t.prototype._change = function() {
        $("#navi ul").addClass("disabled"),
        $("#startup p").text("LOADING..."),
        WebAudioManager.instance.fft = [2,4,6],
        this._jqueryButton.removeClass("active"),
        this._jqueryButton.eq(this._indexSound).addClass("active"),
        this._loadSound(),
        this._chengeTexture(),
        $("#navi ul").addClass("disabled"),
        $("#startup").fadeIn(100)
    }
    ,
    t.prototype._initWebGL = function() {
        this._context.enable(this._context.DEPTH_TEST),
        this._context.depthFunc(this._context.LEQUAL),
        this._program = this._context.createProgram(),
        //this.addVertexShader("vs", t.getScript("vs"))
        this.vertexShader = createShader(this._context, document.getElementById("vs"),this._context.VERTEX_SHADER),
        this.fragmentShader = createShader(this._context, document.getElementById("fs"),this._context.FRAGMENT_SHADER),
        this._context.attachShader(this._program, vertexShader),
        this._context.attachShader(this._program, fragmentShader),
        // this._program.addVertexShader("vs", document.getElementById("vs"))
        // this._program.addFragmentShaderScript("fs"),
        this._context.linkProgram(this._program),
        //this._program.setProgram("vs", "fs"),
        this._initModel(),
        this._vertexBuffer = this._context.createVertexBuffer(),
        this._vertexBuffer.add("vertex", this._vertexList, this._context.STATIC_DRAW),
        this._vertexBuffer.setAttribPointer("vertex", this._program.getAttribLocation("aPosition"), 3, this._context.FLOAT, false, 24, 0),
        this._vertexBuffer.setAttribPointer("vertex", this._program.getAttribLocation("aLength"), 1, this._context.FLOAT, false, 24, 12),
        this._vertexBuffer.setAttribPointer("vertex", this._program.getAttribLocation("aUv"), 2, this._context.FLOAT, false, 24, 16),
        this._indexBuffer = this._context.createIndexBuffer(),
        this._indexBuffer.add("index", this._indexList, this._context.STATIC_DRAW),
        this._indexBuffer.bind("index"),
        this._initTexture(),
        this._uniform = this._context.createUniform()
    }
    ,
    t.prototype._initModel = function() {
        var e, i;
        this._gridSizePlus = t._GRID_SIZE + 1,
        this._gridLength = t._GRID_SIZE * t._GRID_SIZE,
        this._gridLengthPlus = this._gridSizePlus * this._gridSizePlus,
        e = 6 * this._gridLengthPlus,
        i = 6 * this._gridLength,
        this._vertexList = new Float32Array(14 * e),
        this._indexList = new Uint16Array(14 * i),
        this._initModelSphere(this._vertexList, this._indexList, 0 * e, 0 * i, 0, 0),
        this._initModelSphere(this._vertexList, this._indexList, 1 * e, 1 * i, 90, 0),
        this._initModelSphere(this._vertexList, this._indexList, 2 * e, 2 * i, 180, 0),
        this._initModelSphere(this._vertexList, this._indexList, 3 * e, 3 * i, 270, 0),
        this._initModelSphere(this._vertexList, this._indexList, 4 * e, 4 * i, 45, 45),
        this._initModelSphere(this._vertexList, this._indexList, 5 * e, 5 * i, 135, 45),
        this._initModelSphere(this._vertexList, this._indexList, 6 * e, 6 * i, 225, 45),
        this._initModelSphere(this._vertexList, this._indexList, 7 * e, 7 * i, 315, 45),
        this._initModelSphere(this._vertexList, this._indexList, 8 * e, 8 * i, 45, -45),
        this._initModelSphere(this._vertexList, this._indexList, 9 * e, 9 * i, 135, -45),
        this._initModelSphere(this._vertexList, this._indexList, 10 * e, 10 * i, 225, -45),
        this._initModelSphere(this._vertexList, this._indexList, 11 * e, 11 * i, 315, -45)
        this._initModelSphere2(this._vertexList, this._indexList, 12 * e, 12 * i, 0, 0)

    }
    ,
    t.prototype._initModelSphere = function(e, i, o, n, r, a) {
        var s, u, d, _, h, c, l;
        for (l = mat4.create(),
        u = 0; u < this._gridSizePlus; u++)
            for (_ = u / t._GRID_SIZE - .5,
            s = 0; s < this._gridSizePlus; s++)
                d = s / t._GRID_SIZE - .5,
                h = 6 * (u * this._gridSizePlus + s) + o,
                c = vec4.create(),
                c[2] = t._GRID_RADUIS,
                mat4.identity(l),
                mat4.rotateY(l, l, -d * t._GRID_RADIANS),
                mat4.rotateX(l, l, -_ * t._GRID_RADIANS),
                vec4.transformMat4(c, c, l),
                mat4.identity(l),
                mat4.rotateY(l, l, r * t._DEGREES_TO_RADIANS),
                mat4.rotateX(l, l, a * t._DEGREES_TO_RADIANS),
                vec4.transformMat4(c, c, l),
                e[h + 0] = c[0],
                e[h + 1] = c[1],
                e[h + 2] = c[2],
                e[h + 3] = Math.sqrt(d * d + _ * _) * t._LENGTH_TO_RADIAN,
                e[h + 4] = s / t._GRID_SIZE,
                e[h + 5] = u / t._GRID_SIZE;
        for (u = 0; u < t._GRID_SIZE; u++)
            for (s = 0; s < t._GRID_SIZE; s++)
                h = 6 * (u * t._GRID_SIZE + s) + n,
                i[h + 0] = u * this._gridSizePlus + s + o / 6,
                i[h + 1] = (u + 1) * this._gridSizePlus + s + 1 + o / 6,
                i[h + 2] = (u + 1) * this._gridSizePlus + s + o / 6,
                i[h + 3] = u * this._gridSizePlus + s + o / 6,
                i[h + 4] = u * this._gridSizePlus + s + 1 + o / 6,
                i[h + 5] = (u + 1) * this._gridSizePlus + s + 1 + o / 6
    }
    ,
    t.prototype._initModelSphere2 = function(e, i, o, n, r, a) {
        var s, u, d, _, h, c, l;
        for (l = mat4.create(),
        u = 0; u < this._gridSizePlus; u++)
            for (_ = u / t._GRID_SIZE - .5,
            s = 0; s < this._gridSizePlus; s++)
                d = s / t._GRID_SIZE - .5,
                h = 6 * (u * this._gridSizePlus + s) + o,
                c = vec4.create(),
                c[2] = .45,
                mat4.identity(l),
                mat4.rotateY(l, l, -d * 2 * Math.PI),
                mat4.rotateX(l, l, -_ * 2 * Math.PI),
                vec4.transformMat4(c, c, l),
                mat4.identity(l),
                mat4.rotateY(l, l, r * t._DEGREES_TO_RADIANS),
                mat4.rotateX(l, l, a * t._DEGREES_TO_RADIANS),
                vec4.transformMat4(c, c, l),
                e[h + 0] = c[0],
                e[h + 1] = c[1],
                e[h + 2] = c[2],
                e[h + 3] = Math.sqrt(d * d + _ * _) * t._LENGTH_TO_RADIAN,
                e[h + 4] = s / t._GRID_SIZE,
                e[h + 5] = u / t._GRID_SIZE;
        for (u = 0; u < t._GRID_SIZE; u++)
            for (s = 0; s < t._GRID_SIZE; s++)
                h = 6 * (u * t._GRID_SIZE + s) + n,
                i[h + 0] = u * this._gridSizePlus + s + o / 6,
                i[h + 1] = (u + 1) * this._gridSizePlus + s + 1 + o / 6,
                i[h + 2] = (u + 1) * this._gridSizePlus + s + o / 6,
                i[h + 3] = u * this._gridSizePlus + s + o / 6,
                i[h + 4] = u * this._gridSizePlus + s + 1 + o / 6,
                i[h + 5] = (u + 1) * this._gridSizePlus + s + 1 + o / 6
    }
    ,
    t.prototype._initTexture = function() {
        this._texture = this._context.createTexture(),
        this._texture.add2D("texture", this._queue.getResult("images/lmao4.jpg")),
        this._texture.uniformTexture2D("texture", 0, this._program.getUniformLocation("texture")),
        this._texture.setParameterWrapST("texture", this._context.MIRRORED_REPEAT),
        this._texture.bind("texture")
    }
    ,
    t.prototype._chengeTexture = function() {
        this._texture.active(0),
        this._texture.set2D("texture", this._queue.getResult("images/lmao4.jpg")),
        this._texture.uniformTexture2D("texture", 0, this._program.getUniformLocation("texture")),
        this._texture.setParameterWrapST("texture", this._context.MIRRORED_REPEAT),
        this._texture.bind("texture")
    }
    ,
    t.prototype._initSound = function() {
        WebAudioManager.instance.onLoaded = this._onLoaded,
        WebAudioManager.instance.onEnded = this._onEnded
    }
    ,
    t.prototype._loadSound = function() {
        WebAudioManager.instance.load(this._indexSound),
        this._isPlaying = false
    }
    ,
    t._DEGREES_TO_RADIANS = Math.PI / 180,
    t._LENGTH_TO_RADIAN = 4 * Math.PI / Math.sqrt(2) * 6,
    t._GRID_SIZE = 64,
    t._GRID_RADIANS = 40 * Math.PI / 180,
    t._GRID_RADUIS = .75,
    t
}();
$(document).ready(function() {
    var t = new Main;
    t.init()
});